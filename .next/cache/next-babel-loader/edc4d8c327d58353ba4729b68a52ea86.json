{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar config = {\n  apiKey: \"AIzaSyClGRgW4Q4SNzGKXdm0yPNyvUy4OG8Fjc8\",\n  authDomain: \"mybook-438ed.firebaseapp.com\",\n  databaseURL: \"https://mybook-438ed.firebaseio.com\",\n  projectId: \"mybook-438ed\",\n  storageBucket: \"mybook-438ed.appspot.com\",\n  messagingSenderId: \"887601195721\",\n  appId: \"1:887601195721:web:7c831a124d67ec42b0bb18\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {}; // レデューサー（ダミー）\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":null,"metadata":{},"sourceType":"module"}