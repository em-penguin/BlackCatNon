{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar config = {\n  apiKey: \"AIzaSyClGRgW4Q4SNzGKXdm0yPNyvUy4OG8Fjc8\",\n  authDomain: \"mybook-438ed.firebaseapp.com\",\n  databaseURL: \"https://mybook-438ed.firebaseio.com\",\n  projectId: \"mybook-438ed\",\n  storageBucket: \"mybook-438ed.appspot.com\",\n  messagingSenderId: \"887601195721\",\n  appId: \"1:887601195721:web:7c831a124d67ec42b0bb18\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nconst initial = {}; // レデューサー（ダミー）\n\nfunction fireReducer(state = intitial, action) {\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/kojima/Documents/create/git/blackcatnon/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireapp","initializeApp","error","console","log","message","initial","fireReducer","state","intitial","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAGA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,8BAFH;AAGTC,EAAAA,WAAW,EAAE,qCAHJ;AAITC,EAAAA,SAAS,EAAE,cAJF;AAKTC,EAAAA,aAAa,EAAE,0BALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE;AAPE,CAAb;AASA,IAAIC,OAAJ;;AACA,IAAI;AACAT,EAAAA,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AACH,CAFD,CAEE,OAAOU,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AACD,eAAeL,OAAf,C,CACA;;AACA,MAAMM,OAAO,GAAG,EAAhB,C,CAGA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGC,QAA7B,EAAuCC,MAAvC,EAA+C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,YAAL;AACI,aAAOH,KAAP;AACJ;;AACA;AACI,aAAOA,KAAP;AANR;AAQH,C,CAED;;;AACA,OAAO,SAASI,SAAT,CAAmBJ,KAAK,GAAGF,OAA3B,EAAoC;AACvC,SAAOlB,WAAW,CAACmB,WAAD,EAAcC,KAAd,EACdnB,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport firebase from \"firebase\";\n\n\nvar config = {\n    apiKey: \"AIzaSyClGRgW4Q4SNzGKXdm0yPNyvUy4OG8Fjc8\",\n    authDomain: \"mybook-438ed.firebaseapp.com\",\n    databaseURL: \"https://mybook-438ed.firebaseio.com\",\n    projectId: \"mybook-438ed\",\n    storageBucket: \"mybook-438ed.appspot.com\",\n    messagingSenderId: \"887601195721\",\n    appId: \"1:887601195721:web:7c831a124d67ec42b0bb18\"\n};\nvar fireapp;\ntry {\n    firebase.initializeApp(config);\n} catch (error) {\n    console.log(error.message);\n}\nexport default fireapp;\n// ステート初期値\nconst initial = {\n}\n\n// レデューサー（ダミー）\nfunction fireReducer(state = intitial, action) {\n    switch (action.type) {\n        // ダミー\n        case 'TESTACTION':\n            return state;\n        // デフォルト\n        default:\n            return state;\n    }\n}\n\n// initStore関数\nexport function initStore(state = initial) {\n    return createStore(fireReducer, state,\n        applyMiddleware(thunkMiddleware))\n}\n"]},"metadata":{},"sourceType":"module"}